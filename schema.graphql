schema {
  query: JukeboxQuery
  mutation: JukeboxMutation
  subscription: JukeboxSubscription
}

type Category {
  id: Int!
  name: String
}

type JukeboxMutation {
  changeUserName(newName: String!): User!
}

type JukeboxQuery {
  categories: [Category!]! @cost(weight: "10")
  category(id: Int!): Category! @cost(weight: "10")
  me: User!
}

type JukeboxSubscription {
  userUpdated(userId: Int!): User!
}

type User {
  id: Int!
  name: String!
}

"The purpose of the `cost` directive is to define a `weight` for GraphQL types, fields, and arguments. Static analysis can use these weights when calculating the overall cost of a query or response."
directive @cost("The `weight` argument defines what value to add to the overall cost for every appearance, or possible appearance, of a type, field, argument, etc." weight: String!) on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM | INPUT_FIELD_DEFINITION